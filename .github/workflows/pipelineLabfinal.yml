name : Workflow
on:
  push:
    branches:
      - featlabfinal1.1

jobs:
  SAST:
    runs-on: ubuntu-latest
    steps:

    - name: Setup Java JDK 
      uses: action/setup-java@v4.2.1
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Checkout code 
      uses: actions/checkout@v4
        
    - name: Hola Mundo
      run: |
        echo 'Hola mundo'

    - name: Build
      run: |
        chmod 777 gradlew
        ./gradlew build 

    - name: Validando existencia de proyecto en SonarCloud
      id: validateProjectOnSonar
      run: |
        #pwd
        #ls -R
        set +e
        curl -f -X POST -u '${{ secrets.SONAR_TOKEN }}:' 'https://sonarcloud.oi/api/projects/create' -d 'name=${{ github.event.repository.name }}' -d 'project=${{ github.event.repository.name }}' -d 'visibility=public'
        if [ $? -ne 0 ]; then        
          echo "Proyecto ya existe en SonarCloud"
          echo "::set-output name=proyectoExiste::1"
        else
          echo "Proyecto $${{ github.event.repository.name }} fue creado exitosamente en SonarCloud"

          echo "Se establece rama main como rama por defecto"
          curl -X POST -u '${{ secrets.SONAR_TOKEN }}:' 'https://sonarcloud.oi/api/project_branches/rename' -d 'name=main   -d 'project=${{ github.event.repository.name }}'
        fi
        set -e

    - name: Validando tipo de proyecto
      id: tipoProyecto
      if: steps.validateProjectOnSonar.outputs.proyectoExiste == '1'
      run: |
        pwd
        ls -R
        if [ -f "build.gradle"]
        then
          echo "Proyecto Java"
          if grep -q 'id "org.sonarqube" version "3.3"' build.gradle
          then
            echo "El plugin de SonarCloud ya esta presente en build.gradle"
          else
            sed -i '/id '\''java'\''/a \ \ \ \ id '\''org.sonarqube'\'' version '\''3.3'\''' build.gradle
            echo "El plugin de SonarCloud ya está presente en build.gradle"
            cat build.gradle
          fi

        else
          echo "Tipo de proyecto desconocido"
        fi 


    - name: Enable execution gradlew
      run: |
        chmod 777 gradlew    

    - name: Run SonarQube analisis
      run: |
        ./gradlew sonarqube \
        -Dsonar.projectKey=${{ github.event.repository.name }} \
        -Dsonar.organization=labfinaldevsecops \
        -Dsonar.host.url=https://sonarcloud.oi \
        -Dsonar.branch.name=featlabfinal \



#--------------------------------------------------SCA------------------------------------------------#

  SCA:
    needs: SAST
    runs-on: ubuntu-latest
    steps:

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build
      id: build
      run: |
        #pwd
        #ls -R
        if [ -f "build.gradle" ]
        then
          echo "Utiliza build.gradle, proyecto Java"
          echo "Se habilita permiso de ejecución de archivo gradlew"
          chmod 777 gradlew
          ./gradlew build
        else
          echo "Otro tipo de proyecto"
        fi

    - name: Dependency Check
      uses: dependency-check/Dependency-Check_Action@1.1.0
      env:
        JAVA_HOME: /opt/jdk
      id: Depcheck
      with: 
        project: '${{ github.event.repository.name}}'
        path: '.'
        format: 'HTML'
        out: 'report'
        args: >
          --failOnCVSS 7
          --enableRetired

    - name: Upload Test result
      uses: actions/upload-artifacts@master
      with:
        name: Depcheck report
        path: ${{github.workspace}}/report



#----------------------------------------------Docker image------------------------------------------------------#

  DockerBuild:
    needs: SCA 
    runs-on: self-hosted
    steps:

    - name: Checkout code
      uses: action/checkout@v2
